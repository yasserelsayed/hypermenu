{"ast":null,"code":"var $id = 0;\nexport function reducer(state, action) {\n  switch (action.type) {\n    case 'addHeader':\n      {\n        $id++;\n        headerNode.id++;\n        return [...state, { ...headerNode,\n          id: $id,\n          name: action.data.name\n        }];\n      }\n\n    case 'addImage':\n      {\n        $id++;\n        return [...state, { ...imageNode,\n          id: $id,\n          name: action.data.name\n        }];\n      }\n\n    case 'addFooter':\n      {\n        $id++;\n        return [...state, { ...footerNode,\n          id: $id,\n          name: action.data.name\n        }];\n      }\n\n    case 'addItems':\n      {\n        $id++;\n        return [...state, { ...menuItemsNode,\n          id: $id,\n          name: action.data.name\n        }];\n      }\n\n    case 'removeNode':\n      {\n        state.forEach((element, index) => {\n          if (action.data.id == element.id) state.splice(index, 1);\n        });\n        return [...state];\n      }\n\n    case 'updateNode':\n      {\n        state.forEach((element, index) => {\n          if (action.data.id == element.id) state[index] = { ...state[index],\n            name: action.data.name\n          };\n        });\n        return [...state];\n      }\n  }\n}\nexport const actions = {\n  addImage: \"addImage\",\n  addHeader: \"addHeader\",\n  addFooter: \"addFooter\",\n  addItems: \"addItems\",\n  removeNode: \"removeNode\",\n  updateNode: \"updateNode\"\n};\nexport const nodeTypes = {\n  header: \"header\",\n  image: \"image\",\n  footer: \"footer\",\n  items: \"items\"\n};\nvar headerNode = {\n  type: \"header\",\n  title: \"\",\n  description: \"\",\n  name: \"\",\n  id: 0\n};\nvar imageNode = {\n  type: \"image\",\n  src: \"\",\n  name: \"\",\n  id: 0\n};\nvar footerNode = {\n  type: \"footer\",\n  title: \"\",\n  name: \"\",\n  id: 0\n};\nvar menuItemsNode = {\n  type: \"items\",\n  title: \"\",\n  name: \"\",\n  id: 0\n};","map":{"version":3,"sources":["D:/masterdegree/projectHyperMenu/react/hyper_menu/src/reducers/studio_reducer.js"],"names":["$id","reducer","state","action","type","headerNode","id","name","data","imageNode","footerNode","menuItemsNode","forEach","element","index","splice","actions","addImage","addHeader","addFooter","addItems","removeNode","updateNode","nodeTypes","header","image","footer","items","title","description","src"],"mappings":"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","sourcesContent":["\nvar $id =0 \nexport  function reducer(state, action) {\n  switch (action.type) {\n    case 'addHeader':{\n      $id++;\n      headerNode.id++;\n      return [...state,{...headerNode,id:$id,name:action.data.name}];\n    } case 'addImage':{\n      $id++;\n      return [...state,{...imageNode,id:$id,name:action.data.name}];\n    }\n    case 'addFooter':{\n      $id++;\n      return [...state,{...footerNode,id:$id,name:action.data.name}];\n    }\n    case 'addItems':{\n      $id++;\n      return [...state,{...menuItemsNode,id:$id,name:action.data.name}];\n    }\n     case 'removeNode':{\n      state.forEach((element,index) => {\n             if(action.data.id == element.id)\n             state.splice(index,1);\n          });\n      return [...state];\n    }\n\n    case 'updateNode':{\n      state.forEach((element,index) => {\n             if(action.data.id == element.id)\n             state[index] = { ...state[index],name:action.data.name}\n          });\n      return [...state];\n    }\n  }\n}\n\nexport const actions = {addImage:\"addImage\",\n    addHeader:\"addHeader\",\n    addFooter:\"addFooter\",\n    addItems:\"addItems\",\n    removeNode:\"removeNode\",\n    updateNode:\"updateNode\"\n}\n\nexport const nodeTypes = \n   {header:\"header\",\n   image:\"image\",\n   footer:\"footer\",\n   items:\"items\"\n}\n\nvar headerNode = {\n   type: \"header\", \n   title:\"\",\n   description:\"\",\n    name:\"\",\n    id:0\n}\n\nvar imageNode = {\n  type: \"image\", \n  src:\"\",\n   name:\"\",\n   id:0\n}\n\nvar footerNode = {\n  type: \"footer\", \n   title:\"\",\n   name:\"\",\n   id:0\n}\n\nvar menuItemsNode = {\n   type: \"items\", \n   title:\"\",\n   name:\"\",\n   id:0\n}"]},"metadata":{},"sourceType":"module"}