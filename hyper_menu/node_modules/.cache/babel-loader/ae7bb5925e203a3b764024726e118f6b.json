{"ast":null,"code":"var $id = 0;\nvar reducerStateUpdated = false;\nexport function reducer(state, action) {\n  switch (action.type) {\n    case 'init':\n      {\n        reducerStateUpdated = true;\n        action.data.forEach(item => {\n          $id++;\n          item.id = $id;\n        });\n        return [...action.data];\n      }\n\n    case 'addHeader':\n      {\n        $id++;\n        headerNode.id++;\n        reducerStateUpdated = true;\n        return [...state, { ...headerNode,\n          id: $id,\n          name: action.data.name\n        }];\n      }\n\n    case 'addImage':\n      {\n        reducerStateUpdated = true;\n        $id++;\n        return [...state, { ...imageNode,\n          id: $id,\n          name: action.data.name\n        }];\n      }\n\n    case 'addFooter':\n      {\n        stateUpdated = true;\n        $id++;\n        return [...state, { ...footerNode,\n          id: $id,\n          name: action.data.name\n        }];\n      }\n\n    case 'addItems':\n      {\n        stateUpdated = true;\n        $id++;\n        return [...state, { ...menuItemsNode,\n          id: $id,\n          name: action.data.name\n        }];\n      }\n\n    case 'removeNode':\n      {\n        stateUpdated = true;\n        state.forEach((element, index) => {\n          if (action.data.id == element.id) state.splice(index, 1);\n        });\n        return [...state];\n      }\n\n    case 'updateNode':\n      {\n        stateUpdated = true;\n        state.forEach((element, index) => {\n          if (action.data.id == element.id) state[index] = { ...state[index],\n            name: action.data.name\n          };\n        });\n        return [...state];\n      }\n  }\n}\nexport const actions = {\n  init: \"init\",\n  addImage: \"addImage\",\n  addHeader: \"addHeader\",\n  addFooter: \"addFooter\",\n  addItems: \"addItems\",\n  removeNode: \"removeNode\",\n  updateNode: \"updateNode\"\n};\nexport const nodeTypes = {\n  header: \"header\",\n  image: \"image\",\n  footer: \"footer\",\n  items: \"items\"\n};\nvar headerNode = {\n  type: \"header\",\n  title: \"\",\n  description: \"\",\n  name: \"\",\n  id: 0,\n  color: \"#fff\"\n};\nvar imageNode = {\n  type: \"image\",\n  title: \"\",\n  src: \"\",\n  name: \"\",\n  id: 0\n};\nvar footerNode = {\n  type: \"footer\",\n  title: \"\",\n  name: \"\",\n  itemsList: [],\n  id: 0\n};\nvar menuItemsNode = {\n  type: \"items\",\n  title: \"\",\n  name: \"\",\n  id: 0,\n  priceList: []\n};","map":{"version":3,"sources":["D:/masterdegree/projectHyperMenu/react/hyper_menu/src/reducers/studio_reducer.js"],"names":["$id","reducerStateUpdated","reducer","state","action","type","data","forEach","item","id","headerNode","name","imageNode","stateUpdated","footerNode","menuItemsNode","element","index","splice","actions","init","addImage","addHeader","addFooter","addItems","removeNode","updateNode","nodeTypes","header","image","footer","items","title","description","color","src","itemsList","priceList"],"mappings":"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","sourcesContent":["\nvar $id =0 \nvar reducerStateUpdated = false;\nexport  function reducer(state, action) {\n  switch (action.type) {\n    case 'init':{\n      reducerStateUpdated = true;\n      action.data.forEach((item)=>{\n        $id++;\n        item.id = $id\n      })\n       return [...action.data];\n    }\n    case 'addHeader':{\n      $id++;\n      headerNode.id++;\n      reducerStateUpdated = true;\n      return [...state,{...headerNode,id:$id,name:action.data.name}];\n    } case 'addImage':{\n      reducerStateUpdated = true;\n      $id++;\n      return [...state,{...imageNode,id:$id,name:action.data.name}];\n    }\n    case 'addFooter':{\n      stateUpdated = true;\n      $id++;\n      return [...state,{...footerNode,id:$id,name:action.data.name}];\n    }\n    case 'addItems':{\n      stateUpdated = true;\n      $id++;\n      return [...state,{...menuItemsNode,id:$id,name:action.data.name}];\n    }\n     case 'removeNode':{\n      stateUpdated = true;\n      state.forEach((element,index) => {\n             if(action.data.id == element.id)\n             state.splice(index,1);\n          });\n      return [...state];\n    }\n\n    case 'updateNode':{\n      stateUpdated = true;\n      state.forEach((element,index) => {\n             if(action.data.id == element.id)\n             state[index] = { ...state[index],name:action.data.name}\n          });\n      return [...state];\n    }\n  }\n}\n\nexport const actions = {\n    init:\"init\",\n    addImage:\"addImage\",\n    addHeader:\"addHeader\",\n    addFooter:\"addFooter\",\n    addItems:\"addItems\",\n    removeNode:\"removeNode\",\n    updateNode:\"updateNode\"\n}\n\nexport const nodeTypes = \n   {header:\"header\",\n   image:\"image\",\n   footer:\"footer\",\n   items:\"items\"\n}\n\nvar headerNode = {\n    type: \"header\", \n    title:\"\",\n    description:\"\",\n    name:\"\",\n    id:0,\n    color:\"#fff\"\n}\n\nvar imageNode = {\n   type: \"image\", \n   title:\"\",\n   src:\"\",\n   name:\"\",\n   id:0\n}\n\nvar footerNode = {\n  type: \"footer\", \n   title:\"\",\n   name:\"\",\n   itemsList:[],\n   id:0\n}\n\nvar menuItemsNode = {\n   type: \"items\", \n   title:\"\",\n   name:\"\",\n   id:0,\n   priceList:[]\n}"]},"metadata":{},"sourceType":"module"}